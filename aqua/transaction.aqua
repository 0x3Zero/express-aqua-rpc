import "./node.aqua"

data Metadata:
  data_key: string
  public_key: string
  alias: string

data SendTransaction:
  data_key: string 
  token_key: string 
  token_id: string 
  alias: string 
  public_key: string 
  signature: string 
  data: string
  method:string 
  nonce: i64

data SetClone:
  transaction_hash: string
  meta_contract_id: string
  on_metacontract_result: bool
  data: string
  final_error_msg: string

data SetMetadata:
  transaction_hash: string 
  meta_contract_id: string 
  on_metacontract_result: bool 
  metadatas: []FinalMetadata
  final_error_msg: string

func get_active_crons() -> FdbCronsResult:
    on HOST_PEER_ID:
        results <- Node.get_active_crons()
    <- results

func get_all_crons() -> FdbCronsResult:
    on HOST_PEER_ID:
        results <- Node.get_all_crons()
    <- results

func get_meta_contract(token_key: string) -> FdbMetaContractResult:
    on HOST_PEER_ID:
        results <- Node.get_meta_contract(token_key)
    <- results

func get_metadata(data_key: string, public_key: string, alias: string) -> FdbMetadataResult:
    on HOST_PEER_ID:
        results <- Node.get_metadata(data_key, public_key, alias) 
    <- results

func get_metadata_with_history(data_key: string, public_key: string, alias: string) -> FdbMetadataHistoryResult:
    on HOST_PEER_ID:
        results <- Node.get_metadata_with_history(data_key, public_key, alias)
    <- results

func get_metadatas(data_key: string) -> FdbMetadatasResult:
    on HOST_PEER_ID:
        results <- Node.get_metadatas(data_key)
    <- results

func get_pending_transactions() -> FdbTransactionsResult:
    on HOST_PEER_ID:
        results <- Node.get_pending_transactions()
    <- results

func get_transaction(hash: string) -> FdbTransactionResult:
    on HOST_PEER_ID:
        results <- Node.get_transaction(hash)
    <- results

func send_transaction(args: SendTransaction) -> FdbResult:
    on HOST_PEER_ID:
        results <- Node.send_transaction(args.data_key, args.token_key, args.token_id, args.alias, args.public_key, args.signature, args.data, args.method, args.nonce)
    <- results